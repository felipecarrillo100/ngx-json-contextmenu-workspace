import { Directive, HostBinding, HostListener, Input, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/context-menu-event/context-menu-event.service";
import * as i2 from "../../services/context-menu-stack/context-menu-stack.service";
export class ContextMenuDirective {
    constructor(contextMenuEventService, elementRef, contextMenuStackService) {
        this.contextMenuEventService = contextMenuEventService;
        this.elementRef = elementRef;
        this.contextMenuStackService = contextMenuStackService;
        /**
         * The directive must have a tabindex for being accessible
         */
        this.tabindex = '0';
        /**
         * Accessibility
         *
         * @internal
         */
        this.ariaHasPopup = 'true';
    }
    /**
     * Programmatically open the context menu
     */
    open(event) {
        if (!this.canOpen()) {
            return;
        }
        if (event instanceof MouseEvent) {
            this.onContextMenu(event);
            return;
        }
        const { x, y, height } = this.elementRef.nativeElement.getBoundingClientRect();
        this.contextMenuEventService.show({
            anchoredTo: 'position',
            x,
            y: y + height,
            contextMenu: this.contextMenu,
            value: this.contextMenuValue,
        });
    }
    /**
     * Programmatically close the context menu
     */
    close() {
        this.contextMenuStackService.closeAll();
    }
    /**
     * @internal
     */
    onContextMenu(event) {
        if (!this.canOpen()) {
            return;
        }
        this.contextMenuEventService.show({
            anchoredTo: 'position',
            contextMenu: this.contextMenu,
            x: event.clientX,
            y: event.clientY,
            value: this.contextMenuValue,
        });
        event.preventDefault();
        event.stopPropagation();
    }
    canOpen() {
        return this.contextMenu && !this.contextMenu.disabled;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: ContextMenuDirective, deps: [{ token: i1.ContextMenuEventService }, { token: i0.ElementRef }, { token: i2.ContextMenuStackService }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.0.0", type: ContextMenuDirective, selector: "[contextMenu]", inputs: { contextMenuValue: "contextMenuValue", contextMenu: "contextMenu", tabindex: "tabindex" }, host: { listeners: { "contextmenu": "onContextMenu($event)" }, properties: { "attr.tabindex": "this.tabindex", "attr.aria-haspopup": "this.ariaHasPopup" } }, exportAs: ["ngxContextMenu"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: ContextMenuDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[contextMenu]',
                    exportAs: 'ngxContextMenu',
                }]
        }], ctorParameters: function () { return [{ type: i1.ContextMenuEventService }, { type: i0.ElementRef }, { type: i2.ContextMenuStackService }]; }, propDecorators: { contextMenuValue: [{
                type: Input
            }], contextMenu: [{
                type: Input
            }], tabindex: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.tabindex']
            }], ariaHasPopup: [{
                type: HostBinding,
                args: ['attr.aria-haspopup']
            }], onContextMenu: [{
                type: HostListener,
                args: ['contextmenu', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC1tZW51LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1jb250ZXh0bWVudS9zcmMvbGliL2RpcmVjdGl2ZXMvY29udGV4dC1tZW51L2NvbnRleHQtbWVudS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxXQUFXLEVBQ1gsWUFBWSxFQUNaLEtBQUssR0FDTixNQUFNLGVBQWUsQ0FBQzs7OztBQVN2QixNQUFNLE9BQU8sb0JBQW9CO0lBNEIvQixZQUNVLHVCQUFtRCxFQUNuRCxVQUFtQyxFQUNuQyx1QkFBbUQ7UUFGbkQsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUE0QjtRQUNuRCxlQUFVLEdBQVYsVUFBVSxDQUF5QjtRQUNuQyw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQTRCO1FBbEI3RDs7V0FFRztRQUdJLGFBQVEsR0FBb0IsR0FBRyxDQUFDO1FBRXZDOzs7O1dBSUc7UUFFSSxpQkFBWSxHQUFHLE1BQU0sQ0FBQztJQU0xQixDQUFDO0lBRUo7O09BRUc7SUFDSSxJQUFJLENBQUMsS0FBa0I7UUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNuQixPQUFPO1NBQ1I7UUFFRCxJQUFJLEtBQUssWUFBWSxVQUFVLEVBQUU7WUFDL0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMxQixPQUFPO1NBQ1I7UUFFRCxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FDcEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUV4RCxJQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDO1lBQ2hDLFVBQVUsRUFBRSxVQUFVO1lBQ3RCLENBQUM7WUFDRCxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU07WUFDYixXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDN0IsS0FBSyxFQUFFLElBQUksQ0FBQyxnQkFBZ0I7U0FDN0IsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOztPQUVHO0lBQ0ksS0FBSztRQUNWLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUMxQyxDQUFDO0lBRUQ7O09BRUc7SUFFSSxhQUFhLENBQUMsS0FBaUI7UUFDcEMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNuQixPQUFPO1NBQ1I7UUFFRCxJQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDO1lBQ2hDLFVBQVUsRUFBRSxVQUFVO1lBQ3RCLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVztZQUM3QixDQUFDLEVBQUUsS0FBSyxDQUFDLE9BQU87WUFDaEIsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPO1lBQ2hCLEtBQUssRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1NBQzdCLENBQUMsQ0FBQztRQUNILEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVPLE9BQU87UUFDYixPQUFPLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQztJQUN4RCxDQUFDOzhHQXhGVSxvQkFBb0I7a0dBQXBCLG9CQUFvQjs7MkZBQXBCLG9CQUFvQjtrQkFKaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsUUFBUSxFQUFFLGdCQUFnQjtpQkFDM0I7NktBTVEsZ0JBQWdCO3NCQUR0QixLQUFLO2dCQU9DLFdBQVc7c0JBRGpCLEtBQUs7Z0JBUUMsUUFBUTtzQkFGZCxLQUFLOztzQkFDTCxXQUFXO3VCQUFDLGVBQWU7Z0JBU3JCLFlBQVk7c0JBRGxCLFdBQVc7dUJBQUMsb0JBQW9CO2dCQTZDMUIsYUFBYTtzQkFEbkIsWUFBWTt1QkFBQyxhQUFhLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIEhvc3RCaW5kaW5nLFxuICBIb3N0TGlzdGVuZXIsXG4gIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRleHRNZW51Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb250ZXh0LW1lbnUvY29udGV4dC1tZW51LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb250ZXh0TWVudUV2ZW50U2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2NvbnRleHQtbWVudS1ldmVudC9jb250ZXh0LW1lbnUtZXZlbnQuc2VydmljZSc7XG5pbXBvcnQgeyBDb250ZXh0TWVudVN0YWNrU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2NvbnRleHQtbWVudS1zdGFjay9jb250ZXh0LW1lbnUtc3RhY2suc2VydmljZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tjb250ZXh0TWVudV0nLFxuICBleHBvcnRBczogJ25neENvbnRleHRNZW51Jyxcbn0pXG5leHBvcnQgY2xhc3MgQ29udGV4dE1lbnVEaXJlY3RpdmU8VD4ge1xuICAvKipcbiAgICogVGhlIHZhbHVlIHJlbGF0ZWQgdG8gdGhlIGNvbnRleHQgbWVudVxuICAgKi9cbiAgQElucHV0KClcbiAgcHVibGljIGNvbnRleHRNZW51VmFsdWUhOiBUO1xuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IGhvbGRpbmcgdGhlIG1lbnUgaXRlbSBkaXJlY3RpdmUgdGVtcGxhdGVzXG4gICAqL1xuICBASW5wdXQoKVxuICBwdWJsaWMgY29udGV4dE1lbnUhOiBDb250ZXh0TWVudUNvbXBvbmVudDxUPjtcblxuICAvKipcbiAgICogVGhlIGRpcmVjdGl2ZSBtdXN0IGhhdmUgYSB0YWJpbmRleCBmb3IgYmVpbmcgYWNjZXNzaWJsZVxuICAgKi9cbiAgQElucHV0KClcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLnRhYmluZGV4JylcbiAgcHVibGljIHRhYmluZGV4OiBzdHJpbmcgfCBudW1iZXIgPSAnMCc7XG5cbiAgLyoqXG4gICAqIEFjY2Vzc2liaWxpdHlcbiAgICpcbiAgICogQGludGVybmFsXG4gICAqL1xuICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS1oYXNwb3B1cCcpXG4gIHB1YmxpYyBhcmlhSGFzUG9wdXAgPSAndHJ1ZSc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBjb250ZXh0TWVudUV2ZW50U2VydmljZTogQ29udGV4dE1lbnVFdmVudFNlcnZpY2U8VD4sXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICBwcml2YXRlIGNvbnRleHRNZW51U3RhY2tTZXJ2aWNlOiBDb250ZXh0TWVudVN0YWNrU2VydmljZTxUPlxuICApIHt9XG5cbiAgLyoqXG4gICAqIFByb2dyYW1tYXRpY2FsbHkgb3BlbiB0aGUgY29udGV4dCBtZW51XG4gICAqL1xuICBwdWJsaWMgb3BlbihldmVudD86IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMuY2FuT3BlbigpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGV2ZW50IGluc3RhbmNlb2YgTW91c2VFdmVudCkge1xuICAgICAgdGhpcy5vbkNvbnRleHRNZW51KGV2ZW50KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB7IHgsIHksIGhlaWdodCB9ID1cbiAgICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgdGhpcy5jb250ZXh0TWVudUV2ZW50U2VydmljZS5zaG93KHtcbiAgICAgIGFuY2hvcmVkVG86ICdwb3NpdGlvbicsXG4gICAgICB4LFxuICAgICAgeTogeSArIGhlaWdodCxcbiAgICAgIGNvbnRleHRNZW51OiB0aGlzLmNvbnRleHRNZW51LFxuICAgICAgdmFsdWU6IHRoaXMuY29udGV4dE1lbnVWYWx1ZSxcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcm9ncmFtbWF0aWNhbGx5IGNsb3NlIHRoZSBjb250ZXh0IG1lbnVcbiAgICovXG4gIHB1YmxpYyBjbG9zZSgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRleHRNZW51U3RhY2tTZXJ2aWNlLmNsb3NlQWxsKCk7XG4gIH1cblxuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBASG9zdExpc3RlbmVyKCdjb250ZXh0bWVudScsIFsnJGV2ZW50J10pXG4gIHB1YmxpYyBvbkNvbnRleHRNZW51KGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmNhbk9wZW4oKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuY29udGV4dE1lbnVFdmVudFNlcnZpY2Uuc2hvdyh7XG4gICAgICBhbmNob3JlZFRvOiAncG9zaXRpb24nLFxuICAgICAgY29udGV4dE1lbnU6IHRoaXMuY29udGV4dE1lbnUsXG4gICAgICB4OiBldmVudC5jbGllbnRYLFxuICAgICAgeTogZXZlbnQuY2xpZW50WSxcbiAgICAgIHZhbHVlOiB0aGlzLmNvbnRleHRNZW51VmFsdWUsXG4gICAgfSk7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxuXG4gIHByaXZhdGUgY2FuT3BlbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5jb250ZXh0TWVudSAmJiAhdGhpcy5jb250ZXh0TWVudS5kaXNhYmxlZDtcbiAgfVxufVxuIl19