import { OverlayRef } from '@angular/cdk/overlay';
import { ContextMenuContentComponent } from '../../components/context-menu-content/context-menu-content.component';
import * as i0 from "@angular/core";
export interface ContextMenuStackItem<T> {
    overlayRef: OverlayRef;
    contextMenuContentComponent: ContextMenuContentComponent<T>;
}
export declare class ContextMenuStackService<T> {
    private stack;
    /**
     * Add an item to the stack
     */
    push(value: ContextMenuStackItem<T>): void;
    /**
     * Return the stack size
     */
    size(): number;
    /**
     * Return true if the stack is empty
     */
    isEmpty(): boolean;
    /**
     * Clear the whole stack
     */
    closeAll(): void;
    /**
     * Detach and dispose sub menu's overlays of the given ContextMenuContentComponent
     */
    destroySubMenus(contextMenu: ContextMenuContentComponent<T>): void;
    /**
     * Destroy leaf menu and return true if the destroyed menu is the root
     */
    closeLeafMenu(excludeRootMenu: boolean): boolean;
    /**
     * Starting by most recent items, dispose all detached item and return the most recent attached one
     */
    private disposeLastDetached;
    private last;
    private pop;
    private isDetached;
    private dispose;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContextMenuStackService<any>, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ContextMenuStackService<any>>;
}
