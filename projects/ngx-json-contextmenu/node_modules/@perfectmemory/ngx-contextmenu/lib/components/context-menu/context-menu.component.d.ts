import { Overlay, ScrollStrategyOptions } from '@angular/cdk/overlay';
import { EventEmitter, OnDestroy, QueryList } from '@angular/core';
import { ContextMenuItemDirective } from '../../directives/context-menu-item/context-menu-item.directive';
import { ContextMenuEventService } from '../../services/context-menu-event/context-menu-event.service';
import { ContextMenuStackService } from '../../services/context-menu-stack/context-menu-stack.service';
import { ContextMenuOpenEvent, IContextMenuContext } from './context-menu.component.interface';
import * as i0 from "@angular/core";
export declare class ContextMenuComponent<T> implements OnDestroy {
    private overlay;
    private scrollStrategy;
    private contextMenuStack;
    private contextMenuEventService;
    /**
     * A CSS class to apply to the context menu overlay, ideal for theming and custom styling
     */
    menuClass: string;
    /**
     * Disable the whole context menu
     */
    disabled: boolean;
    /**
     * Whether the menu is oriented to the right (default: `ltr`) or to the right (`rtl`)
     */
    dir: 'ltr' | 'rtl' | undefined;
    /**
     * Emit when the menu is opened
     */
    open: EventEmitter<ContextMenuOpenEvent<T>>;
    /**
     * Emit when the menu is closed
     */
    close: EventEmitter<void>;
    /**
     * The menu item directives defined inside the component
     */
    menuItems: QueryList<ContextMenuItemDirective<T>>;
    /**
     * @internal
     */
    visibleMenuItems: ContextMenuItemDirective<T>[];
    /**
     * @internal
     */
    value?: T;
    private subscription;
    constructor(overlay: Overlay, scrollStrategy: ScrollStrategyOptions, contextMenuStack: ContextMenuStackService<T>, contextMenuEventService: ContextMenuEventService<T>);
    /**
     * @internal
     */
    ngOnInit(): void;
    /**
     * @internal
     */
    ngOnDestroy(): void;
    /**
     * Open context menu
     */
    openContextMenu(context: IContextMenuContext<T>): void;
    private onMenuEvent;
    private attachContextMenu;
    private getMenuClass;
    private getDir;
    private closeAllContextMenus;
    private destroyLeafMenu;
    private isMenuItemVisible;
    private setVisibleMenuItems;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContextMenuComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContextMenuComponent<any>, "context-menu", never, { "menuClass": { "alias": "menuClass"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "dir": { "alias": "dir"; "required": false; }; }, { "open": "open"; "close": "close"; }, ["menuItems"], never, false, never>;
}
