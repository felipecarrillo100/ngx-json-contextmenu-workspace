import { ElementRef } from '@angular/core';
import { ContextMenuComponent } from '../../components/context-menu/context-menu.component';
import { ContextMenuEventService } from '../../services/context-menu-event/context-menu-event.service';
import { ContextMenuStackService } from '../../services/context-menu-stack/context-menu-stack.service';
import * as i0 from "@angular/core";
export declare class ContextMenuDirective<T> {
    private contextMenuEventService;
    private elementRef;
    private contextMenuStackService;
    /**
     * The value related to the context menu
     */
    contextMenuValue: T;
    /**
     * The component holding the menu item directive templates
     */
    contextMenu: ContextMenuComponent<T>;
    /**
     * The directive must have a tabindex for being accessible
     */
    tabindex: string | number;
    /**
     * Accessibility
     *
     * @internal
     */
    ariaHasPopup: string;
    constructor(contextMenuEventService: ContextMenuEventService<T>, elementRef: ElementRef<HTMLElement>, contextMenuStackService: ContextMenuStackService<T>);
    /**
     * Programmatically open the context menu
     */
    open(event?: MouseEvent): void;
    /**
     * Programmatically close the context menu
     */
    close(): void;
    /**
     * @internal
     */
    onContextMenu(event: MouseEvent): void;
    private canOpen;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContextMenuDirective<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ContextMenuDirective<any>, "[contextMenu]", ["ngxContextMenu"], { "contextMenuValue": { "alias": "contextMenuValue"; "required": false; }; "contextMenu": { "alias": "contextMenu"; "required": false; }; "tabindex": { "alias": "tabindex"; "required": false; }; }, {}, never, never, false, never>;
}
